<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="MPAAFilmRating">
		<value condition="String.StartsWith(ListItem.mpaa,Rated G) | String.StartsWith(ListItem.mpaa,Rated: G) | String.StartsWith(ListItem.mpaa, G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated G) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: G) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="[String.StartsWith(ListItem.mpaa,Rated PG) | String.StartsWith(ListItem.mpaa,Rated: PG) | String.StartsWith(ListItem.mpaa, PG)] + !String.StartsWith(ListItem.mpaa,Rated PG-13) + !String.StartsWith(ListItem.mpaa,Rated: PG-13) + !String.StartsWith(ListItem.mpaa, PG-13)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="[String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated PG) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: PG) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), PG)] + !String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated PG-13) + !String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: PG-13) + !String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), PG-13)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.StartsWith(ListItem.mpaa,Rated PG-13) | String.StartsWith(ListItem.mpaa,Rated: PG-13) | String.StartsWith(ListItem.mpaa, PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated PG-13) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: PG-13) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(ListItem.mpaa,Rated R) | String.StartsWith(ListItem.mpaa,Rated: R) | String.StartsWith(ListItem.mpaa, R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated R) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: R) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.StartsWith(ListItem.mpaa,Rated NC-17) | String.StartsWith(ListItem.mpaa,Rated: NC-17) | String.StartsWith(ListItem.mpaa, NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated NC-17) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: NC-17) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
    <value>flags/mpaa/film/us/rating-nr.png</value>
	</variable>

	<variable name="MPAATVRating">
		<value condition="String.Contains(ListItem.MPAA,TV-14)">flags/mpaa/tv/tv-14.png</value>
		<value condition="String.Contains(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-14) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-14.png</value>
		<value condition="String.Contains(ListItem.MPAA,TV-G)">flags/mpaa/tv/tv-g.png</value>
		<value condition="String.Contains(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-G) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-g.png</value>
		<value condition="String.Contains(ListItem.MPAA,TV-MA)">flags/mpaa/tv/tv-ma.png</value>
		<value condition="String.Contains(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-MA) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-ma.png</value>
		<value condition="String.Contains(ListItem.MPAA,TV-PG)">flags/mpaa/tv/tv-pg.png</value>
		<value condition="String.Contains(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-PG) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-pg.png</value>
		<value condition="String.EndsWith(ListItem.MPAA,TV-Y)">flags/mpaa/tv/tv-y.png</value>
		<value condition="String.EndsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-Y) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-y.png</value>
		<value condition="String.EndsWith(ListItem.MPAA,TV-Y7)">flags/mpaa/tv/tv-y7.png</value>
		<value condition="String.EndsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-Y7) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-y7.png</value>
		<value>flags/mpaa/tv/tv-na.png</value>
	</variable>


	<variable name="MPAAMetadataInfoFilmRating">
		<value condition="String.StartsWith(Window.Property(mpaa),G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),NC17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated NC17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG-13)">flags/mpaa/film/us/rating-pg13.png</value>rating-pg13
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated R)">flags/mpaa/film/us/rating-r.png</value>	
    <value>flags/mpaa/film/us/rating-nr.png</value>
	</variable>

	<include name="FlagsLayout">
			<width>68</width>
			<height>25</height>
			<colordiffuse>mediaflags</colordiffuse>
	</include>
	<include name="FlagsLayoutAudioChannels">
			<width>40</width>
			<height>25</height>
			<colordiffuse>mediaflags</colordiffuse>
	</include>

	<include name="AspectRatioFlagsConditions">
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.VideoAspect,flags/aspect/,.png]</texture>
		</control>
	</include>
	<include name="AspectRatioFlagsConditionsTwo">
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[Window.Property(VideoAspect),flags/aspect/,.png]</texture>
		</control>
	</include>
	<include name="VideoResFlagsConditions">
		<control type="image">
			<description>Video Resolution Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.VideoResolution,flags/res/,.png]</texture>
		</control>
	</include>
	<include name="VideoResFlagsConditionsTwo">
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[Window.Property(VideoResolution),flags/res/,.png]</texture>
		</control>
	</include>
	<include name="VideoCodecFlagsConditions">		
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.VideoCodec,flags/video/,.png]</texture>
		</control>
	</include>
  <include name="VideoCodecFlagsConditionsTwo">		
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[Window.Property(VideoCodec),flags/video/,.png]</texture>
		</control>
	</include>
	<include name="AudioCodecFlagsConditions">
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
		</control>
	</include>
	<include name="AudioCodecFlagsConditionsTwo">
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[Window.Property(AudioCodec),flags/audio/,.png]</texture>
		</control>
	</include>

	<include name="AudioChannelsFlagsConditions">
		<control type="image">
			<include>FlagsLayoutAudioChannels</include>
			<texture>$INFO[ListItem.AudioChannels,flags/channels/,.png]</texture>
		</control>
	</include>
	<include name="AudioChannelsFlagsConditionsTwo">
		<control type="image">
			<include>FlagsLayoutAudioChannels</include>
			<texture>$INFO[Window.Property(AudioChannels),flags/channels/,.png]</texture>
		</control>
	</include>

	<include name="VideoStereoscopicsFlagsConditions">
		<control type="image">
			<include>FlagsLayout</include>
			<texture>flags/video/3d.png</texture>
			<visible>ListItem.IsStereoscopic</visible>
		</control>
	</include>


	<include name="CameraLogosLayout">
			<left>0</left>
			<top>0</top>
			<width>161</width>
			<height>109</height>
	    <colordiffuse>mediaflags</colordiffuse>
	</include>

	<include name="CameraLogosFlags">
<!-- *Disabled*
		<control type="image">
      <include>CameraLogosLayout</include>
      <texture>views/list/info.png</texture>
			<visible>String.IsEmpty(ListItem.PictureCamMake)</visible>
		</control>
		-->
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/canon.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Canon) | String.Contains(ListItem.PictureCamModel,Canon)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/casio.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Casio) | String.Contains(ListItem.PictureCamModel,Casio)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/fujifilm.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,FujiFilm) | String.Contains(ListItem.PictureCamModel,FujiFilm)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/hasselbland.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Hasselbland) | String.Contains(ListItem.PictureCamModel,Hasselbland)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/kodak.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Kodak) | String.Contains(ListItem.PictureCamModel,Kodak)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/konica.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Konica) | String.Contains(ListItem.PictureCamModel,Konica)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/minolta.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Minolta) | String.Contains(ListItem.PictureCamModel,Minolta)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/leica.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Leica) | String.Contains(ListItem.PictureCamModel,Leica)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/nikon.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Nikon) | String.Contains(ListItem.PictureCamModel,Nikon)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/nokia.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Nokia) | String.Contains(ListItem.PictureCamModel,Nokia)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/olympus.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Olympus) | String.Contains(ListItem.PictureCamModel,Olympus)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/panasonic.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Panasonic) | String.Contains(ListItem.PictureCamModel,Panasonic)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/pentax.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Pentax) | String.Contains(ListItem.PictureCamModel,Pentax)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/polaroid.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Polaroid) | String.Contains(ListItem.PictureCamModel,Polaroid)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/samsung.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Samsung) | String.Contains(ListItem.PictureCamModel,Samsung)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/sanyo.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Sanyo) | String.Contains(ListItem.PictureCamModel,Sanyo)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/sigma.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Sigma) | String.Contains(ListItem.PictureCamModel,Sigma)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/sony.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Sony) | String.Contains(ListItem.PictureCamModel,Sony)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/toshiba.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Toshiba) | String.Contains(ListItem.PictureCamModel,Toshiba)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/yashica.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Yashica) | String.Contains(ListItem.PictureCamModel,Yashica)</visible>
		</control>
	</include>

	<include name="VideoLanguageFlagLayout">
			<left>28</left>
			<top>3</top>
			<width>25</width>
			<height>20</height>
	</include>
	<include name="VideoLanguageImageLayout">
			<width>61</width>
			<height>25</height>
			<colordiffuse>mediaflags</colordiffuse>
	</include>

	<include name="VideoLanguageFlags">
		<control type="grouplist">
				<align>left</align>
				<aligny>center</aligny>
				<orientation>horizontal</orientation>
				<itemgap>5</itemgap>
				<!-- Audio Language -->
				<control type="group">
					<width>61</width>
					<height>25</height>
					<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/language_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(AudioLanguage.1),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
					<width>61</width>
					<height>25</height>
          <visible>!String.IsEmpty(ListItem.Property(AudioLanguage.2))</visible>
          <visible>!String.IsEqual(ListItem.Property(AudioLanguage.1),ListItem.Property(AudioLanguage.2))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/language_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(AudioLanguage.2),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
					<width>61</width>
					<height>25</height>
          <visible>!String.IsEmpty(ListItem.Property(AudioLanguage.3))</visible>
          <visible>!String.IsEqual(ListItem.Property(AudioLanguage.1),ListItem.Property(AudioLanguage.3))</visible>
          <visible>!String.IsEqual(ListItem.Property(AudioLanguage.2),ListItem.Property(AudioLanguage.3))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/language_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(AudioLanguage.3),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<!-- Subtitle Language -->
				<control type="group">
					<width>61</width>
					<height>25</height>
				  <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.1))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.1),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
					<width>61</width>
					<height>25</height>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.2))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.2))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.2),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
					<width>61</width>
					<height>25</height>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.3))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.3))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.2),ListItem.Property(SubtitleLanguage.3))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.3),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
					<width>61</width>
					<height>25</height>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.4))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.4))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.2),ListItem.Property(SubtitleLanguage.4))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.3),ListItem.Property(SubtitleLanguage.4))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.4),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
					<width>61</width>
					<height>25</height>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.5))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.5))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.2),ListItem.Property(SubtitleLanguage.5))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.3),ListItem.Property(SubtitleLanguage.5))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.4),ListItem.Property(SubtitleLanguage.5))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.5),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
					<width>61</width>
					<height>25</height>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.2),ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.3),ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.4),ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.5),ListItem.Property(SubtitleLanguage.6))</visible>
				  <control type="image">
				    <include>VideoLanguageImageLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.6),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
		</control>
	</include>

</includes>