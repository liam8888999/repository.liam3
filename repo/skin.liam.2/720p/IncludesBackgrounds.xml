<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="BackgroundWeather">
		<control type="multiimage">
			<aspectratio>scale</aspectratio>
			<include>FullscreenDimensions</include>
			<include>FanartFade</include>
			<imagepath background="true" diffuse="windows/bg/fanart_effect.png">$INFO[Skin.String(WeatherFanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanartType]</imagepath>
			<timeperimage>30000</timeperimage>
			<fadetime>500</fadetime>
			<randomize>true</randomize>
			<loop>yes</loop>
			<visible>[Window.IsVisible(weather) | String.IsEqual(Container(20).ListItem.Property(background),BackgroundWeather)] + !String.IsEmpty(Skin.String(WeatherFanart.path))</visible>
			<include condition="[Skin.HasSetting(HomeBG-Animation) + Window.IsActive(Home)]">BackgroundAnimation</include>
			<include>QuickNavFadeEffect</include>
		</control>
	</include>

	<include name="BackgroundContent">
		<control type="group">
			<animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			<animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
			<visible>![Player.HasVideo + !Skin.HasSetting(HideBGVideo)]</visible>
			<visible>![Player.HasAudio + [[Skin.HasSetting(Vis-Fanart) + !String.IsEmpty(Player.Art(fanart))] | Skin.HasSetting(Vis-MusicSlideshow) | Skin.HasSetting(Vis-ArtistSlideshow)]]</visible>
			<control type="image">
				<description>Default Background</description>
				<include>FullscreenDimensions</include>
				<colordiffuse>$VAR[BG.GlobalColor]</colordiffuse>
				<texture background="true">special://skin/extras/backgrounds/default.jpg</texture>
				<include>QuickNavFadeEffect</include>
			</control>
			<control type="group">
				<visible>![Window.IsVisible(weather) + !String.IsEmpty(Skin.String(WeatherFanart.path))]</visible>
				<include>QuickNavFadeEffect</include>
				<control type="image">
					<description>HomeMenu Single-Background</description>
					<aspectratio>scale</aspectratio>
					<include>FullscreenDimensions</include>
					<include>FanartFade</include>
					<texture background="true" diffuse="windows/bg/fanart_effect.png">$INFO[Container(20).ListItem.Property(Background)]</texture>
					<fadetime>500</fadetime>
					<visible>![String.EndsWith(Container(20).ListItem.Property(Background),\) | String.EndsWith(Container(20).ListItem.Property(Background),/)]</visible>
					<include condition="Skin.HasSetting(HomeBG-Animation)">BackgroundAnimation</include>
				</control>
				<control type="multiimage">
					<description>HomeMenu Multi-Background</description>
					<aspectratio>scale</aspectratio>
					<include>FullscreenDimensions</include>
					<include>FanartFade</include>
					<imagepath background="true" diffuse="windows/bg/fanart_effect.png">$INFO[Container(20).ListItem.Property(Background)]</imagepath>
					<timeperimage>10000</timeperimage>
					<randomize>true</randomize>
					<loop>yes</loop>
					<fadetime>600</fadetime>
					<visible>String.EndsWith(Container(20).ListItem.Property(Background),\) | String.EndsWith(Container(20).ListItem.Property(Background),/)</visible>
					<include condition="Skin.HasSetting(HomeBG-Animation)">BackgroundAnimation</include>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Movies_Posters</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_Movies_Posters)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Movies_Logos</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_Movies_Logos)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Movies_Landscapes</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_Movies_Landscapes)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Movies_DiscArts</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_Movies_DiscArts)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_TVShows_Posters</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_TVShows_Posters)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_TVShows_Logos</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_TVShows_Logos)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_TVShows_Landscapes</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_TVShows_Landscapes)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Albums</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_Albums)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Artists</include>
					<visible>String.IsEqual(Container(20).ListItem.Property(Background),3DWallBG_Artists)</visible>
				</control>
			</control>
		</control>
		<control type="videowindow">
			<description>Video</description>
			<include>FullscreenDimensions</include>
			<visible>Player.HasVideo + !Skin.HasSetting(HideBGVideo)</visible>
		</control>
		<control type="visualisation">
			<left>0</left>
			<top>0</top>
			<width>1280</width>
			<height>720</height>
			<visible>Player.HasAudio + !Skin.HasSetting(Vis-Visualization)</visible>
		</control>
		<control type="image">
			<aspectratio>scale</aspectratio>
			<include>FullscreenDimensions</include>
			<fadetime>1000</fadetime>
			<texture background="true" diffuse="windows/bg/fanart_effect.png">$VAR[Vis-Background]</texture>
			<animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
			<animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			<animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
			<include condition="Skin.HasSetting(Vis-Animation)">BackgroundAnimation</include>
			<visible>Player.HasAudio</visible>
		</control>
		<include condition="!String.IsEmpty(Skin.String(WeatherFanart.path))">BackgroundWeather</include>
	</include>

	<include name="GlobalFanart">
		<control type="image">
			<description>Global Fanart</description>
			<aspectratio>scale</aspectratio>
			<include>FullscreenDimensions</include>
			<texture background="true" diffuse="windows/bg/fanart_effect.png">$VAR[VarGlobalArtFanart]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>!Container(3000).IsUpdating</visible>
			<visible>![Skin.HasSetting(HideBGFanart) + !Control.IsVisible(65)]</visible>
			<visible>![[Control.IsVisible(55) | [Control.IsVisible(59) + Window.IsVisible(MyVideoNav.xml)]] + ![Window.IsActive(movieinformation) | Window.IsActive(1130) | [String.IsEqual(Window(Home).Property(ShowTextViewer),1) + Window.IsActive(TextViewer)] | Window.IsActive(favourites) | Window.IsActive(playercontrols)] + String.IsEmpty(Window(Home).Property(infodialogs.active))] + !Control.IsVisible(580)</visible>
			<include condition="[Skin.HasSetting(HomeBG-Animation) + Window.IsActive(Home)]">BackgroundAnimation</include>
			<include>QuickNavFadeEffect</include>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/black.png</texture>
			<include>FanartFade</include>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>[[Control.IsVisible(59) + Window.IsVisible(MyVideoNav.xml)] + ![Window.IsActive(playercontrols) | Window.IsActive(movieinformation) | Window.IsActive(1130) | [String.IsEqual(Window(Home).Property(ShowTextViewer),1) + Window.IsActive(TextViewer)] | Window.IsActive(script-script.extendedinfo-DialogInfo.xml) | Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsActive(script-script.extendedinfo-VideoList.xml) | Window.IsActive(script-script.extendedinfo-YoutubeList.xml)] + String.IsEmpty(Window(Home).Property(infodialogs.active))]</visible>
			<visible>!ListItem.IsParentFolder</visible>
			<include>QuickNavFadeEffect</include>
		</control>
		<control type="image">
			<description>NetFilx Fanart</description>
			<left>380</left>
			<top>0</top>
			<width>900</width>
			<height>510</height>
			<aspectratio>scale</aspectratio>
			<texture background="true" diffuse="views/netflix/fanart_diffuse.png">$INFO[ListItem.Art(fanart)]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>[[Control.IsVisible(59) + Window.IsVisible(MyVideoNav.xml)] + ![Window.IsActive(playercontrols) | Window.IsActive(movieinformation) | Window.IsActive(1130) | [String.IsEqual(Window(Home).Property(ShowTextViewer),1) + Window.IsActive(TextViewer)] | Window.IsActive(script-script.extendedinfo-DialogInfo.xml) | Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsActive(script-script.extendedinfo-VideoList.xml) | Window.IsActive(script-script.extendedinfo-YoutubeList.xml)] + String.IsEmpty(Window(Home).Property(infodialogs.active))]</visible>
			<include>QuickNavFadeEffect</include>
		</control>
		<control type="image">
			<description>TVGuide Fanart</description>
			<aspectratio>scale</aspectratio>
			<include>FullscreenDimensions</include>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<texture background="true" diffuse="windows/bg/fanart_effect.png">$INFO[Container.ListItem.Property(Fanart)]</texture>
			<visible>![Skin.HasSetting(HideBGTVGuideFanart) | Skin.HasSetting(HideBGFanart)]</visible>
			<include>QuickNavFadeEffect</include>
		</control>
	</include>

	<include name="VideoWallFanartVideos">
		<itemlayout height="720" width="1280">
			<control type="image">
				<aspectratio>scale</aspectratio>
				<include>FullscreenDimensions</include>
				<texture background="true" diffuse="windows/bg/fanart_effect.png">$INFO[ListItem.Art(fanart)]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="720" width="1280">
			<control type="image">
				<aspectratio>scale</aspectratio>
				<include>FullscreenDimensions</include>
				<texture background="true" diffuse="windows/bg/fanart_effect.png">$INFO[ListItem.Art(fanart)]</texture>
			</control>
		</focusedlayout>
		<include>QuickNavFadeEffect</include>
	</include>

	<include name="QuickNavFanart">
		<control type="image">
			<description>QuickNav Fanart</description>
			<aspectratio>scale</aspectratio>
			<include>FullscreenDimensions</include>
			<texture background="true" diffuse="dialogs/quicknav/fanart_diffuse.png">$VAR[QuickNavWidgetsFanart]</texture>
			<fadetime>FanartCrossfadeTime</fadetime>
			<animation effect="fade" time="300" tween="sine" easing="out" reversible="false">WindowOpen</animation>
			<animation effect="fade" time="300" tween="sine" easing="in" reversible="false">WindowClose</animation>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
		</control>
	</include>

	<include name="BackgroundDarkness">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_overlay.png</texture>
			<include>FanartFade</include>
			<visible>![[Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRSearch.xml) | [Window.IsActive(script-globalsearch.xml) + ![Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]] + !Player.HasMedia]</visible>
			<visible>Control.IsVisible(50)
				| Control.IsVisible(51)
				| Control.IsVisible(52)
				| Control.IsVisible(53)
				| Control.IsVisible(54)
				| Control.IsVisible(55)
				| Control.IsVisible(56)
				| Control.IsVisible(57)
				| Control.IsVisible(58)
				| Control.IsVisible(560)
				| Control.IsVisible(561)
				| Control.IsVisible(562)
				| Control.IsVisible(563)
				| Control.IsVisible(64)
				| [[Control.IsVisible(25) | Control.IsVisible(65) | Control.IsVisible(66) | Control.IsVisible(660) | Control.IsVisible(661) | Control.IsVisible(580) | Control.IsVisible(3000)] + [Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]
				| [Control.IsVisible(59) + [Skin.HasSetting(HideBGFanart) | Window.IsActive(DialogVideoInfo.xml)]]
				| Window.IsActive(Custom_Trailers.xml)
				| Window.IsActive(Custom_TMDBInfo.xml)
				| Window.IsActive(AddonSettings)
				| Window.IsActive(Favourites)
				| Window.IsActive(TextViewer)
				| Window.IsActive(MusicPlaylistEditor)
				| Window.IsActive(PlayerControls)
				| [Window.IsActive(script-NextAired-TVGuide.xml) + ![Skin.HasSetting(HideBGFanart) | Skin.HasSetting(HideBGTVGuideFanart)]]
				| [Window.IsActive(script-NextAired-TVGuide2.xml) + ![Skin.HasSetting(HideBGFanart) | Skin.HasSetting(HideBGTVGuideFanart)]]
				| !String.IsEmpty(Window(Home).Property(infodialogs.active))
			</visible>
		</control>
		<include>InfoDialogsOverlay</include>
	</include>

	<include name="InfoDialogsOverlay">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_overlay_two.png</texture>
			<include>FanartFade</include>
			<visible>Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)</visible>
		</control>
	</include>

</includes>
